plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def config = rootProject.ext.android
def libraries = rootProject.ext.dependencies
def isCompileProtobuf = rootProject.ext.isCompileProtobuf
if (isCompileProtobuf) {
    apply plugin: 'com.google.protobuf'
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.yhl.cast.client"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            if (isCompileProtobuf) {
                proto {
                    srcDir 'src/main/proto'
                    include '**/*.proto'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

//重新编译proto文件，需要将config.gradle的isCompileProtobuf修改为true
if (isCompileProtobuf) {
    protobuf {
        //这里配置protoc编译器
        protoc {
            artifact = 'com.google.protobuf:protoc:3.11.2'
        }
        plugins {
            javalite {
                // The codegen for lite comes as a separate artifact
                artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
            }
        }
        //这里配置生成目录，rebuild后会在项目gradle同级的目录下的protofile下生成对应的java文件
        generateProtoTasks {
            all().each { task ->
                task.plugins {
                    javalite {}
                }
            }
        }
        generatedFilesBaseDir = 'protofile'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /* rx */
    implementation libraries.rxandroid2
    implementation libraries.rxjava2
    implementation libraries.rxlifecycle3
//    implementation libraries.rxlifecycle3_android
    implementation libraries.rxlifecycle3_components

    /* network */
    implementation libraries.retrofit2
    implementation libraries.retrofit2_converter_gson
    implementation libraries.retrofit2_adapter_rxjava2
    implementation libraries.okhttp3
    implementation libraries.okhttp3_logging_interceptor
    implementation libraries.gson

    /* glide */
    implementation libraries.glide
    kapt libraries.glide_compiler

    implementation libraries.andPermission
    implementation project(":lanlink")
    implementation libraries.protobuf_lite
    implementation libraries.gson
    implementation libraries.multidex
}